State 14 conflicts: 1 shift/reduce


Grammar

    0 $accept: Prog $end

    1 $@1: %empty

    2 Prog: $@1 All_List

    3 All_List: Proc_Def_List
    4         | Proc_Dec All_List

    5 $@2: %empty

    6 All_List: Var_Dec $@2 All_List

    7 Proc_Def_List: Proc_Def
    8              | Proc_Def Proc_Def_List

    9 Proc_Init: Retr_type NAME '(' Param_List ')'

   10 Retr_type: VOID
   11          | Var_type

   12 Proc_Dec: Proc_Init ';'

   13 $@3: %empty

   14 Proc_Def: Proc_Init '{' Var_Dec_List $@3 Stmt_List '}'

   15 Param_List: %empty
   16           | Param_Type_List
   17           | Param_List1

   18 Param_Type_List: Var_type
   19                | Param_Type_List ',' Var_type

   20 Param_List1: Var_type NAME
   21            | Param_List1 ',' Var_type NAME

   22 Var_Dec_List: %empty
   23             | Var_Dec_List1

   24 Var_Dec_List1: Var_Dec
   25              | Var_Dec_List1 Var_Dec

   26 Var_Dec: Var_type Var_List ';'

   27 Var_type: INTEGER
   28         | FLOAT

   29 Var_List: NAME
   30         | Var_List ',' NAME

   31 Stmt_List: %empty
   32          | Stmt_List Stmt_block

   33 Stmt_block: '{' Stmt_List '}'
   34           | Single_Stmt

   35 Single_Stmt: If_block
   36            | While_block
   37            | Do_While_block
   38            | Assng_stmt
   39            | Prnt_stmt
   40            | Call_stmt
   41            | Retr_stmt

   42 If_block: IF '(' Log_Expr ')' Stmt_block
   43         | IF '(' Log_Expr ')' Stmt_block ELSE Stmt_block

   44 Do_While_block: DO Stmt_block WHILE '(' Log_Expr ')' ';'

   45 While_block: WHILE '(' Log_Expr ')' Stmt_block

   46 Assng_stmt: Var ASSIGN Expr ';'

   47 Prnt_stmt: PRINT Var ';'

   48 Call_stmt: Call_expr ';'

   49 Retr_stmt: RETURN Expr ';'
   50          | RETURN ';'

   51 Log_Expr: Log_Expr OR Log_Expr
   52         | Log_Expr AND Log_Expr
   53         | NOT Log_Expr
   54         | '(' Log_Expr ')'
   55         | Rel_Expr

   56 Rel_Expr: Expr LESS_THAN Expr
   57         | Expr LESS_THAN_EQUAL Expr
   58         | Expr GREATER_THAN Expr
   59         | Expr GREATER_THAN_EQUAL Expr
   60         | Expr EQUAL Expr
   61         | Expr NOT_EQUAL Expr

   62 Call_expr: NAME '(' Expr_List ')'

   63 Expr_List: %empty
   64          | Expr_List1

   65 Expr_List1: Expr
   66           | Expr_List1 ',' Expr

   67 Expr: Log_Expr '?' Expr ':' Expr
   68     | Call_expr
   69     | Expr '+' Expr
   70     | Expr '-' Expr
   71     | Expr '*' Expr
   72     | Expr '/' Expr
   73     | '-' Expr
   74     | '(' Expr ')'
   75     | Var
   76     | Const

   77 Var: NAME

   78 Const: INTEGER_NUMBER
   79      | DOUBLE_NUMBER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 42 43 44 45 54 62 74
')' (41) 9 42 43 44 45 54 62 74
'*' (42) 71
'+' (43) 69
',' (44) 19 21 30 66
'-' (45) 70 73
'/' (47) 72
':' (58) 67
';' (59) 12 26 44 46 47 48 49 50
'?' (63) 67
'{' (123) 14 33
'}' (125) 14 33
error (256)
INTEGER (258) 27
FLOAT (259) 28
ASSIGN (260) 46
VOID (261) 10
NAME (262) 9 20 21 29 30 62 77
INTEGER_NUMBER (263) 78
DOUBLE_NUMBER (264) 79
IF (265) 42 43
ELSE (266) 43
DO (267) 44
WHILE (268) 44 45
LESS_THAN (269) 56
LESS_THAN_EQUAL (270) 57
GREATER_THAN (271) 58
GREATER_THAN_EQUAL (272) 59
EQUAL (273) 60
NOT_EQUAL (274) 61
AND (275) 52
OR (276) 51
NOT (277) 53
UMINUS (278)
PRINT (279) 47
RETURN (280) 49 50
NO_ELSE (281)


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Prog (40)
    on left: 2, on right: 0
$@1 (41)
    on left: 1, on right: 2
All_List (42)
    on left: 3 4 6, on right: 2 4 6
$@2 (43)
    on left: 5, on right: 6
Proc_Def_List (44)
    on left: 7 8, on right: 3 8
Proc_Init (45)
    on left: 9, on right: 12 14
Retr_type (46)
    on left: 10 11, on right: 9
Proc_Dec (47)
    on left: 12, on right: 4
Proc_Def (48)
    on left: 14, on right: 7 8
$@3 (49)
    on left: 13, on right: 14
Param_List (50)
    on left: 15 16 17, on right: 9
Param_Type_List (51)
    on left: 18 19, on right: 16 19
Param_List1 (52)
    on left: 20 21, on right: 17 21
Var_Dec_List (53)
    on left: 22 23, on right: 14
Var_Dec_List1 (54)
    on left: 24 25, on right: 23 25
Var_Dec (55)
    on left: 26, on right: 6 24 25
Var_type (56)
    on left: 27 28, on right: 11 18 19 20 21 26
Var_List (57)
    on left: 29 30, on right: 26 30
Stmt_List (58)
    on left: 31 32, on right: 14 32 33
Stmt_block (59)
    on left: 33 34, on right: 32 42 43 44 45
Single_Stmt (60)
    on left: 35 36 37 38 39 40 41, on right: 34
If_block (61)
    on left: 42 43, on right: 35
Do_While_block (62)
    on left: 44, on right: 37
While_block (63)
    on left: 45, on right: 36
Assng_stmt (64)
    on left: 46, on right: 38
Prnt_stmt (65)
    on left: 47, on right: 39
Call_stmt (66)
    on left: 48, on right: 40
Retr_stmt (67)
    on left: 49 50, on right: 41
Log_Expr (68)
    on left: 51 52 53 54 55, on right: 42 43 44 45 51 52 53 54 67
Rel_Expr (69)
    on left: 56 57 58 59 60 61, on right: 55
Call_expr (70)
    on left: 62, on right: 48 68
Expr_List (71)
    on left: 63 64, on right: 62
Expr_List1 (72)
    on left: 65 66, on right: 64 66
Expr (73)
    on left: 67 68 69 70 71 72 73 74 75 76, on right: 46 49 56 57 58
    59 60 61 65 66 67 69 70 71 72 73 74
Var (74)
    on left: 77, on right: 46 47 75
Const (75)
    on left: 78 79, on right: 76


State 0

    0 $accept: . Prog $end

    $default  reduce using rule 1 ($@1)

    Prog  go to state 1
    $@1   go to state 2


State 1

    0 $accept: Prog . $end

    $end  shift, and go to state 3


State 2

    2 Prog: $@1 . All_List

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    VOID     shift, and go to state 6

    All_List       go to state 7
    Proc_Def_List  go to state 8
    Proc_Init      go to state 9
    Retr_type      go to state 10
    Proc_Dec       go to state 11
    Proc_Def       go to state 12
    Var_Dec        go to state 13
    Var_type       go to state 14


State 3

    0 $accept: Prog $end .

    $default  accept


State 4

   27 Var_type: INTEGER .

    $default  reduce using rule 27 (Var_type)


State 5

   28 Var_type: FLOAT .

    $default  reduce using rule 28 (Var_type)


State 6

   10 Retr_type: VOID .

    $default  reduce using rule 10 (Retr_type)


State 7

    2 Prog: $@1 All_List .

    $default  reduce using rule 2 (Prog)


State 8

    3 All_List: Proc_Def_List .

    $default  reduce using rule 3 (All_List)


State 9

   12 Proc_Dec: Proc_Init . ';'
   14 Proc_Def: Proc_Init . '{' Var_Dec_List $@3 Stmt_List '}'

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16


State 10

    9 Proc_Init: Retr_type . NAME '(' Param_List ')'

    NAME  shift, and go to state 17


State 11

    4 All_List: Proc_Dec . All_List

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    VOID     shift, and go to state 6

    All_List       go to state 18
    Proc_Def_List  go to state 8
    Proc_Init      go to state 9
    Retr_type      go to state 10
    Proc_Dec       go to state 11
    Proc_Def       go to state 12
    Var_Dec        go to state 13
    Var_type       go to state 14


State 12

    7 Proc_Def_List: Proc_Def .
    8              | Proc_Def . Proc_Def_List

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    VOID     shift, and go to state 6

    $default  reduce using rule 7 (Proc_Def_List)

    Proc_Def_List  go to state 19
    Proc_Init      go to state 20
    Retr_type      go to state 10
    Proc_Def       go to state 12
    Var_type       go to state 21


State 13

    6 All_List: Var_Dec . $@2 All_List

    $default  reduce using rule 5 ($@2)

    $@2  go to state 22


State 14

   11 Retr_type: Var_type .
   26 Var_Dec: Var_type . Var_List ';'

    NAME  shift, and go to state 23

    NAME  [reduce using rule 11 (Retr_type)]

    Var_List  go to state 24


State 15

   12 Proc_Dec: Proc_Init ';' .

    $default  reduce using rule 12 (Proc_Dec)


State 16

   14 Proc_Def: Proc_Init '{' . Var_Dec_List $@3 Stmt_List '}'

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 22 (Var_Dec_List)

    Var_Dec_List   go to state 25
    Var_Dec_List1  go to state 26
    Var_Dec        go to state 27
    Var_type       go to state 28


State 17

    9 Proc_Init: Retr_type NAME . '(' Param_List ')'

    '('  shift, and go to state 29


State 18

    4 All_List: Proc_Dec All_List .

    $default  reduce using rule 4 (All_List)


State 19

    8 Proc_Def_List: Proc_Def Proc_Def_List .

    $default  reduce using rule 8 (Proc_Def_List)


State 20

   14 Proc_Def: Proc_Init . '{' Var_Dec_List $@3 Stmt_List '}'

    '{'  shift, and go to state 16


State 21

   11 Retr_type: Var_type .

    $default  reduce using rule 11 (Retr_type)


State 22

    6 All_List: Var_Dec $@2 . All_List

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    VOID     shift, and go to state 6

    All_List       go to state 30
    Proc_Def_List  go to state 8
    Proc_Init      go to state 9
    Retr_type      go to state 10
    Proc_Dec       go to state 11
    Proc_Def       go to state 12
    Var_Dec        go to state 13
    Var_type       go to state 14


State 23

   29 Var_List: NAME .

    $default  reduce using rule 29 (Var_List)


State 24

   26 Var_Dec: Var_type Var_List . ';'
   30 Var_List: Var_List . ',' NAME

    ';'  shift, and go to state 31
    ','  shift, and go to state 32


State 25

   14 Proc_Def: Proc_Init '{' Var_Dec_List . $@3 Stmt_List '}'

    $default  reduce using rule 13 ($@3)

    $@3  go to state 33


State 26

   23 Var_Dec_List: Var_Dec_List1 .
   25 Var_Dec_List1: Var_Dec_List1 . Var_Dec

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 23 (Var_Dec_List)

    Var_Dec   go to state 34
    Var_type  go to state 28


State 27

   24 Var_Dec_List1: Var_Dec .

    $default  reduce using rule 24 (Var_Dec_List1)


State 28

   26 Var_Dec: Var_type . Var_List ';'

    NAME  shift, and go to state 23

    Var_List  go to state 24


State 29

    9 Proc_Init: Retr_type NAME '(' . Param_List ')'

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 15 (Param_List)

    Param_List       go to state 35
    Param_Type_List  go to state 36
    Param_List1      go to state 37
    Var_type         go to state 38


State 30

    6 All_List: Var_Dec $@2 All_List .

    $default  reduce using rule 6 (All_List)


State 31

   26 Var_Dec: Var_type Var_List ';' .

    $default  reduce using rule 26 (Var_Dec)


State 32

   30 Var_List: Var_List ',' . NAME

    NAME  shift, and go to state 39


State 33

   14 Proc_Def: Proc_Init '{' Var_Dec_List $@3 . Stmt_List '}'

    $default  reduce using rule 31 (Stmt_List)

    Stmt_List  go to state 40


State 34

   25 Var_Dec_List1: Var_Dec_List1 Var_Dec .

    $default  reduce using rule 25 (Var_Dec_List1)


State 35

    9 Proc_Init: Retr_type NAME '(' Param_List . ')'

    ')'  shift, and go to state 41


State 36

   16 Param_List: Param_Type_List .
   19 Param_Type_List: Param_Type_List . ',' Var_type

    ','  shift, and go to state 42

    $default  reduce using rule 16 (Param_List)


State 37

   17 Param_List: Param_List1 .
   21 Param_List1: Param_List1 . ',' Var_type NAME

    ','  shift, and go to state 43

    $default  reduce using rule 17 (Param_List)


State 38

   18 Param_Type_List: Var_type .
   20 Param_List1: Var_type . NAME

    NAME  shift, and go to state 44

    $default  reduce using rule 18 (Param_Type_List)


State 39

   30 Var_List: Var_List ',' NAME .

    $default  reduce using rule 30 (Var_List)


State 40

   14 Proc_Def: Proc_Init '{' Var_Dec_List $@3 Stmt_List . '}'
   32 Stmt_List: Stmt_List . Stmt_block

    NAME    shift, and go to state 45
    IF      shift, and go to state 46
    DO      shift, and go to state 47
    WHILE   shift, and go to state 48
    PRINT   shift, and go to state 49
    RETURN  shift, and go to state 50
    '{'     shift, and go to state 51
    '}'     shift, and go to state 52

    Stmt_block      go to state 53
    Single_Stmt     go to state 54
    If_block        go to state 55
    Do_While_block  go to state 56
    While_block     go to state 57
    Assng_stmt      go to state 58
    Prnt_stmt       go to state 59
    Call_stmt       go to state 60
    Retr_stmt       go to state 61
    Call_expr       go to state 62
    Var             go to state 63


State 41

    9 Proc_Init: Retr_type NAME '(' Param_List ')' .

    $default  reduce using rule 9 (Proc_Init)


State 42

   19 Param_Type_List: Param_Type_List ',' . Var_type

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    Var_type  go to state 64


State 43

   21 Param_List1: Param_List1 ',' . Var_type NAME

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    Var_type  go to state 65


State 44

   20 Param_List1: Var_type NAME .

    $default  reduce using rule 20 (Param_List1)


State 45

   62 Call_expr: NAME . '(' Expr_List ')'
   77 Var: NAME .

    '('  shift, and go to state 66

    $default  reduce using rule 77 (Var)


State 46

   42 If_block: IF . '(' Log_Expr ')' Stmt_block
   43         | IF . '(' Log_Expr ')' Stmt_block ELSE Stmt_block

    '('  shift, and go to state 67


State 47

   44 Do_While_block: DO . Stmt_block WHILE '(' Log_Expr ')' ';'

    NAME    shift, and go to state 45
    IF      shift, and go to state 46
    DO      shift, and go to state 47
    WHILE   shift, and go to state 48
    PRINT   shift, and go to state 49
    RETURN  shift, and go to state 50
    '{'     shift, and go to state 51

    Stmt_block      go to state 68
    Single_Stmt     go to state 54
    If_block        go to state 55
    Do_While_block  go to state 56
    While_block     go to state 57
    Assng_stmt      go to state 58
    Prnt_stmt       go to state 59
    Call_stmt       go to state 60
    Retr_stmt       go to state 61
    Call_expr       go to state 62
    Var             go to state 63


State 48

   45 While_block: WHILE . '(' Log_Expr ')' Stmt_block

    '('  shift, and go to state 69


State 49

   47 Prnt_stmt: PRINT . Var ';'

    NAME  shift, and go to state 70

    Var  go to state 71


State 50

   49 Retr_stmt: RETURN . Expr ';'
   50          | RETURN . ';'

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76
    ';'             shift, and go to state 77

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 81
    Var        go to state 82
    Const      go to state 83


State 51

   33 Stmt_block: '{' . Stmt_List '}'

    $default  reduce using rule 31 (Stmt_List)

    Stmt_List  go to state 84


State 52

   14 Proc_Def: Proc_Init '{' Var_Dec_List $@3 Stmt_List '}' .

    $default  reduce using rule 14 (Proc_Def)


State 53

   32 Stmt_List: Stmt_List Stmt_block .

    $default  reduce using rule 32 (Stmt_List)


State 54

   34 Stmt_block: Single_Stmt .

    $default  reduce using rule 34 (Stmt_block)


State 55

   35 Single_Stmt: If_block .

    $default  reduce using rule 35 (Single_Stmt)


State 56

   37 Single_Stmt: Do_While_block .

    $default  reduce using rule 37 (Single_Stmt)


State 57

   36 Single_Stmt: While_block .

    $default  reduce using rule 36 (Single_Stmt)


State 58

   38 Single_Stmt: Assng_stmt .

    $default  reduce using rule 38 (Single_Stmt)


State 59

   39 Single_Stmt: Prnt_stmt .

    $default  reduce using rule 39 (Single_Stmt)


State 60

   40 Single_Stmt: Call_stmt .

    $default  reduce using rule 40 (Single_Stmt)


State 61

   41 Single_Stmt: Retr_stmt .

    $default  reduce using rule 41 (Single_Stmt)


State 62

   48 Call_stmt: Call_expr . ';'

    ';'  shift, and go to state 85


State 63

   46 Assng_stmt: Var . ASSIGN Expr ';'

    ASSIGN  shift, and go to state 86


State 64

   19 Param_Type_List: Param_Type_List ',' Var_type .

    $default  reduce using rule 19 (Param_Type_List)


State 65

   21 Param_List1: Param_List1 ',' Var_type . NAME

    NAME  shift, and go to state 87


State 66

   62 Call_expr: NAME '(' . Expr_List ')'

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    $default  reduce using rule 63 (Expr_List)

    Log_Expr    go to state 78
    Rel_Expr    go to state 79
    Call_expr   go to state 80
    Expr_List   go to state 88
    Expr_List1  go to state 89
    Expr        go to state 90
    Var         go to state 82
    Const       go to state 83


State 67

   42 If_block: IF '(' . Log_Expr ')' Stmt_block
   43         | IF '(' . Log_Expr ')' Stmt_block ELSE Stmt_block

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 91
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 92
    Var        go to state 82
    Const      go to state 83


State 68

   44 Do_While_block: DO Stmt_block . WHILE '(' Log_Expr ')' ';'

    WHILE  shift, and go to state 93


State 69

   45 While_block: WHILE '(' . Log_Expr ')' Stmt_block

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 94
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 92
    Var        go to state 82
    Const      go to state 83


State 70

   77 Var: NAME .

    $default  reduce using rule 77 (Var)


State 71

   47 Prnt_stmt: PRINT Var . ';'

    ';'  shift, and go to state 95


State 72

   78 Const: INTEGER_NUMBER .

    $default  reduce using rule 78 (Const)


State 73

   79 Const: DOUBLE_NUMBER .

    $default  reduce using rule 79 (Const)


State 74

   53 Log_Expr: NOT . Log_Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 96
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 92
    Var        go to state 82
    Const      go to state 83


State 75

   73 Expr: '-' . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 97
    Var        go to state 82
    Const      go to state 83


State 76

   54 Log_Expr: '(' . Log_Expr ')'
   74 Expr: '(' . Expr ')'

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 98
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 99
    Var        go to state 82
    Const      go to state 83


State 77

   50 Retr_stmt: RETURN ';' .

    $default  reduce using rule 50 (Retr_stmt)


State 78

   51 Log_Expr: Log_Expr . OR Log_Expr
   52         | Log_Expr . AND Log_Expr
   67 Expr: Log_Expr . '?' Expr ':' Expr

    AND  shift, and go to state 100
    OR   shift, and go to state 101
    '?'  shift, and go to state 102


State 79

   55 Log_Expr: Rel_Expr .

    $default  reduce using rule 55 (Log_Expr)


State 80

   68 Expr: Call_expr .

    $default  reduce using rule 68 (Expr)


State 81

   49 Retr_stmt: RETURN Expr . ';'
   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112
    ';'                 shift, and go to state 113


State 82

   75 Expr: Var .

    $default  reduce using rule 75 (Expr)


State 83

   76 Expr: Const .

    $default  reduce using rule 76 (Expr)


State 84

   32 Stmt_List: Stmt_List . Stmt_block
   33 Stmt_block: '{' Stmt_List . '}'

    NAME    shift, and go to state 45
    IF      shift, and go to state 46
    DO      shift, and go to state 47
    WHILE   shift, and go to state 48
    PRINT   shift, and go to state 49
    RETURN  shift, and go to state 50
    '{'     shift, and go to state 51
    '}'     shift, and go to state 114

    Stmt_block      go to state 53
    Single_Stmt     go to state 54
    If_block        go to state 55
    Do_While_block  go to state 56
    While_block     go to state 57
    Assng_stmt      go to state 58
    Prnt_stmt       go to state 59
    Call_stmt       go to state 60
    Retr_stmt       go to state 61
    Call_expr       go to state 62
    Var             go to state 63


State 85

   48 Call_stmt: Call_expr ';' .

    $default  reduce using rule 48 (Call_stmt)


State 86

   46 Assng_stmt: Var ASSIGN . Expr ';'

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 115
    Var        go to state 82
    Const      go to state 83


State 87

   21 Param_List1: Param_List1 ',' Var_type NAME .

    $default  reduce using rule 21 (Param_List1)


State 88

   62 Call_expr: NAME '(' Expr_List . ')'

    ')'  shift, and go to state 116


State 89

   64 Expr_List: Expr_List1 .
   66 Expr_List1: Expr_List1 . ',' Expr

    ','  shift, and go to state 117

    $default  reduce using rule 64 (Expr_List)


State 90

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   65 Expr_List1: Expr .
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 65 (Expr_List1)


State 91

   42 If_block: IF '(' Log_Expr . ')' Stmt_block
   43         | IF '(' Log_Expr . ')' Stmt_block ELSE Stmt_block
   51 Log_Expr: Log_Expr . OR Log_Expr
   52         | Log_Expr . AND Log_Expr
   67 Expr: Log_Expr . '?' Expr ':' Expr

    AND  shift, and go to state 100
    OR   shift, and go to state 101
    '?'  shift, and go to state 102
    ')'  shift, and go to state 118


State 92

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112


State 93

   44 Do_While_block: DO Stmt_block WHILE . '(' Log_Expr ')' ';'

    '('  shift, and go to state 119


State 94

   45 While_block: WHILE '(' Log_Expr . ')' Stmt_block
   51 Log_Expr: Log_Expr . OR Log_Expr
   52         | Log_Expr . AND Log_Expr
   67 Expr: Log_Expr . '?' Expr ':' Expr

    AND  shift, and go to state 100
    OR   shift, and go to state 101
    '?'  shift, and go to state 102
    ')'  shift, and go to state 120


State 95

   47 Prnt_stmt: PRINT Var ';' .

    $default  reduce using rule 47 (Prnt_stmt)


State 96

   51 Log_Expr: Log_Expr . OR Log_Expr
   52         | Log_Expr . AND Log_Expr
   53         | NOT Log_Expr .
   67 Expr: Log_Expr . '?' Expr ':' Expr

    $default  reduce using rule 53 (Log_Expr)


State 97

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr
   73     | '-' Expr .

    $default  reduce using rule 73 (Expr)


State 98

   51 Log_Expr: Log_Expr . OR Log_Expr
   52         | Log_Expr . AND Log_Expr
   54         | '(' Log_Expr . ')'
   67 Expr: Log_Expr . '?' Expr ':' Expr

    AND  shift, and go to state 100
    OR   shift, and go to state 101
    '?'  shift, and go to state 102
    ')'  shift, and go to state 121


State 99

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr
   74     | '(' Expr . ')'

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112
    ')'                 shift, and go to state 122


State 100

   52 Log_Expr: Log_Expr AND . Log_Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 123
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 92
    Var        go to state 82
    Const      go to state 83


State 101

   51 Log_Expr: Log_Expr OR . Log_Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 124
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 92
    Var        go to state 82
    Const      go to state 83


State 102

   67 Expr: Log_Expr '?' . Expr ':' Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 125
    Var        go to state 82
    Const      go to state 83


State 103

   56 Rel_Expr: Expr LESS_THAN . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 126
    Var        go to state 82
    Const      go to state 83


State 104

   57 Rel_Expr: Expr LESS_THAN_EQUAL . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 127
    Var        go to state 82
    Const      go to state 83


State 105

   58 Rel_Expr: Expr GREATER_THAN . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 128
    Var        go to state 82
    Const      go to state 83


State 106

   59 Rel_Expr: Expr GREATER_THAN_EQUAL . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 129
    Var        go to state 82
    Const      go to state 83


State 107

   60 Rel_Expr: Expr EQUAL . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 130
    Var        go to state 82
    Const      go to state 83


State 108

   61 Rel_Expr: Expr NOT_EQUAL . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 131
    Var        go to state 82
    Const      go to state 83


State 109

   69 Expr: Expr '+' . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 132
    Var        go to state 82
    Const      go to state 83


State 110

   70 Expr: Expr '-' . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 133
    Var        go to state 82
    Const      go to state 83


State 111

   71 Expr: Expr '*' . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 134
    Var        go to state 82
    Const      go to state 83


State 112

   72 Expr: Expr '/' . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 135
    Var        go to state 82
    Const      go to state 83


State 113

   49 Retr_stmt: RETURN Expr ';' .

    $default  reduce using rule 49 (Retr_stmt)


State 114

   33 Stmt_block: '{' Stmt_List '}' .

    $default  reduce using rule 33 (Stmt_block)


State 115

   46 Assng_stmt: Var ASSIGN Expr . ';'
   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112
    ';'                 shift, and go to state 136


State 116

   62 Call_expr: NAME '(' Expr_List ')' .

    $default  reduce using rule 62 (Call_expr)


State 117

   66 Expr_List1: Expr_List1 ',' . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 137
    Var        go to state 82
    Const      go to state 83


State 118

   42 If_block: IF '(' Log_Expr ')' . Stmt_block
   43         | IF '(' Log_Expr ')' . Stmt_block ELSE Stmt_block

    NAME    shift, and go to state 45
    IF      shift, and go to state 46
    DO      shift, and go to state 47
    WHILE   shift, and go to state 48
    PRINT   shift, and go to state 49
    RETURN  shift, and go to state 50
    '{'     shift, and go to state 51

    Stmt_block      go to state 138
    Single_Stmt     go to state 54
    If_block        go to state 55
    Do_While_block  go to state 56
    While_block     go to state 57
    Assng_stmt      go to state 58
    Prnt_stmt       go to state 59
    Call_stmt       go to state 60
    Retr_stmt       go to state 61
    Call_expr       go to state 62
    Var             go to state 63


State 119

   44 Do_While_block: DO Stmt_block WHILE '(' . Log_Expr ')' ';'

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 139
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 92
    Var        go to state 82
    Const      go to state 83


State 120

   45 While_block: WHILE '(' Log_Expr ')' . Stmt_block

    NAME    shift, and go to state 45
    IF      shift, and go to state 46
    DO      shift, and go to state 47
    WHILE   shift, and go to state 48
    PRINT   shift, and go to state 49
    RETURN  shift, and go to state 50
    '{'     shift, and go to state 51

    Stmt_block      go to state 140
    Single_Stmt     go to state 54
    If_block        go to state 55
    Do_While_block  go to state 56
    While_block     go to state 57
    Assng_stmt      go to state 58
    Prnt_stmt       go to state 59
    Call_stmt       go to state 60
    Retr_stmt       go to state 61
    Call_expr       go to state 62
    Var             go to state 63


State 121

   54 Log_Expr: '(' Log_Expr ')' .

    $default  reduce using rule 54 (Log_Expr)


State 122

   74 Expr: '(' Expr ')' .

    $default  reduce using rule 74 (Expr)


State 123

   51 Log_Expr: Log_Expr . OR Log_Expr
   52         | Log_Expr . AND Log_Expr
   52         | Log_Expr AND Log_Expr .
   67 Expr: Log_Expr . '?' Expr ':' Expr

    $default  reduce using rule 52 (Log_Expr)


State 124

   51 Log_Expr: Log_Expr . OR Log_Expr
   51         | Log_Expr OR Log_Expr .
   52         | Log_Expr . AND Log_Expr
   67 Expr: Log_Expr . '?' Expr ':' Expr

    AND  shift, and go to state 100

    $default  reduce using rule 51 (Log_Expr)


State 125

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   67 Expr: Log_Expr '?' Expr . ':' Expr
   69     | Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    ':'                 shift, and go to state 141
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112


State 126

   56 Rel_Expr: Expr . LESS_THAN Expr
   56         | Expr LESS_THAN Expr .
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 56 (Rel_Expr)


State 127

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   57         | Expr LESS_THAN_EQUAL Expr .
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 57 (Rel_Expr)


State 128

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   58         | Expr GREATER_THAN Expr .
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 58 (Rel_Expr)


State 129

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   59         | Expr GREATER_THAN_EQUAL Expr .
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 59 (Rel_Expr)


State 130

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   60         | Expr EQUAL Expr .
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 60 (Rel_Expr)


State 131

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   61         | Expr NOT_EQUAL Expr .
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 61 (Rel_Expr)


State 132

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   69     | Expr '+' Expr .
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112

    $default  reduce using rule 69 (Expr)


State 133

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   70     | Expr '-' Expr .
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112

    $default  reduce using rule 70 (Expr)


State 134

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   71     | Expr '*' Expr .
   72     | Expr . '/' Expr

    $default  reduce using rule 71 (Expr)


State 135

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr
   72     | Expr '/' Expr .

    $default  reduce using rule 72 (Expr)


State 136

   46 Assng_stmt: Var ASSIGN Expr ';' .

    $default  reduce using rule 46 (Assng_stmt)


State 137

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   66 Expr_List1: Expr_List1 ',' Expr .
   69 Expr: Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 66 (Expr_List1)


State 138

   42 If_block: IF '(' Log_Expr ')' Stmt_block .
   43         | IF '(' Log_Expr ')' Stmt_block . ELSE Stmt_block

    ELSE  shift, and go to state 142

    $default  reduce using rule 42 (If_block)


State 139

   44 Do_While_block: DO Stmt_block WHILE '(' Log_Expr . ')' ';'
   51 Log_Expr: Log_Expr . OR Log_Expr
   52         | Log_Expr . AND Log_Expr
   67 Expr: Log_Expr . '?' Expr ':' Expr

    AND  shift, and go to state 100
    OR   shift, and go to state 101
    '?'  shift, and go to state 102
    ')'  shift, and go to state 143


State 140

   45 While_block: WHILE '(' Log_Expr ')' Stmt_block .

    $default  reduce using rule 45 (While_block)


State 141

   67 Expr: Log_Expr '?' Expr ':' . Expr

    NAME            shift, and go to state 45
    INTEGER_NUMBER  shift, and go to state 72
    DOUBLE_NUMBER   shift, and go to state 73
    NOT             shift, and go to state 74
    '-'             shift, and go to state 75
    '('             shift, and go to state 76

    Log_Expr   go to state 78
    Rel_Expr   go to state 79
    Call_expr  go to state 80
    Expr       go to state 144
    Var        go to state 82
    Const      go to state 83


State 142

   43 If_block: IF '(' Log_Expr ')' Stmt_block ELSE . Stmt_block

    NAME    shift, and go to state 45
    IF      shift, and go to state 46
    DO      shift, and go to state 47
    WHILE   shift, and go to state 48
    PRINT   shift, and go to state 49
    RETURN  shift, and go to state 50
    '{'     shift, and go to state 51

    Stmt_block      go to state 145
    Single_Stmt     go to state 54
    If_block        go to state 55
    Do_While_block  go to state 56
    While_block     go to state 57
    Assng_stmt      go to state 58
    Prnt_stmt       go to state 59
    Call_stmt       go to state 60
    Retr_stmt       go to state 61
    Call_expr       go to state 62
    Var             go to state 63


State 143

   44 Do_While_block: DO Stmt_block WHILE '(' Log_Expr ')' . ';'

    ';'  shift, and go to state 146


State 144

   56 Rel_Expr: Expr . LESS_THAN Expr
   57         | Expr . LESS_THAN_EQUAL Expr
   58         | Expr . GREATER_THAN Expr
   59         | Expr . GREATER_THAN_EQUAL Expr
   60         | Expr . EQUAL Expr
   61         | Expr . NOT_EQUAL Expr
   67 Expr: Log_Expr '?' Expr ':' Expr .
   69     | Expr . '+' Expr
   70     | Expr . '-' Expr
   71     | Expr . '*' Expr
   72     | Expr . '/' Expr

    LESS_THAN           shift, and go to state 103
    LESS_THAN_EQUAL     shift, and go to state 104
    GREATER_THAN        shift, and go to state 105
    GREATER_THAN_EQUAL  shift, and go to state 106
    EQUAL               shift, and go to state 107
    NOT_EQUAL           shift, and go to state 108
    '+'                 shift, and go to state 109
    '-'                 shift, and go to state 110
    '*'                 shift, and go to state 111
    '/'                 shift, and go to state 112

    $default  reduce using rule 67 (Expr)


State 145

   43 If_block: IF '(' Log_Expr ')' Stmt_block ELSE Stmt_block .

    $default  reduce using rule 43 (If_block)


State 146

   44 Do_While_block: DO Stmt_block WHILE '(' Log_Expr ')' ';' .

    $default  reduce using rule 44 (Do_While_block)
